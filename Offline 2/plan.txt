
Number -> 13 bit
Exp -> 4 bit

1. Compare -> Zarif

input : expA , expB
output : n (number of bits to shift smaller)

2. Add -> Naeem + Zarif

- first make inputs 13 bit
- shift smaller -> n (from step 1)
- add 

input : 13bit_A + 13bit_B
output : S , C_out

3. Exponent_Handle_1 -> Solaiman --------> X

- add 2 inputs

input : large_exp , C_out from step 2
output : S(exp_ouput)

4. Truncate -> Solaiman

input : S from step 2 , C_out from step 2
output : shifted_ans

5. Normalize -> Sifat

- find number of bits to shift using bit finder 
then shift
- subtract 

input : shifted_ans from step 3  , exp_ouput from step 3
output : norm_ans_fraction , norm_ans_exp , number of bits shifted


